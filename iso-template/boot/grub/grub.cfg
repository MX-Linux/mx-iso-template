#------------------------------------------------------------------
# file: /boot/grub/grub.cfg for the Live version of %DISTRO_NAME%
#
# This file can get updated automatically on a LiveUSB via the save
# feature in the text menus.  It is possible to break these updates
# by editing this file.
#------------------------------------------------------------------

loadfont /boot/grub/fonts/font.pf2
loadfont /boot/grub/fonts/7x13.pf2
loadfont /boot/grub/fonts/dejavu-sans-14.pf2
loadfont /boot/grub/fonts/dejavu-sans-16.pf2

set timeout=60
set gfxmode=1024x768

insmod efi_gop
insmod efi_uga
insmod video_bochs
insmod video_cirrus
insmod gfxterm
insmod png
insmod jpeg

terminal_output gfxterm

set theme=/boot/grub/theme/theme.txt
export theme

set gfxpayload="3200x1800;2560x1440;2160x1440;1920x1080;1600x1200;1600x1050;1600x900;1440x900;1366x768;1280x1024;1280x800;1280x720;1024x768;auto"

# search --no-floppy --set=root --fs-uuid %UUID%

set default=1

menuentry " snapshot %FULL_DISTRO_NAME_SPACE% (%RELEASE_DATE%)" {
linux /antiX/vmlinuz %OPTIONS%
initrd /antiX/initrd.gz
}

#--custom  menuentry " Custom" {
#--custom  linux /antiX/vmlinuz quiet
#--custom  initrd /antiX/initrd.gz
#--custom  }

menuentry " snapshot %FULL_DISTRO_NAME_SPACE% Customize Boot (text menus)" {
linux /antiX/vmlinuz %OPTIONS% menus
initrd /antiX/initrd.gz
}

submenu ">>> Advanced Options for %FULL_DISTRO_NAME_SPACE% <<<" {

menu_color_normal=white/black
menu_color_highlight=yellow/light-gray

menuentry " snapshot %FULL_DISTRO_NAME_SPACE% Failsafe" {
linux /antiX/vmlinuz %OPTIONS% nomodeset failsafe
initrd /antiX/initrd.gz
}

menuentry " snapshot %FULL_DISTRO_NAME_SPACE% (1024x768)" {
linux /antiX/vmlinuz %OPTIONS%
initrd /antiX/initrd.gz
}

menuentry " Power Off" --hotkey=P {
halt
}

menuentry " Reboot"  --hotkey=R {
reboot
}

if [ -f /boot/grub/theme/help.txt ]; then
menuentry " Help" --hotkey=H {
cat /boot/grub/theme/help.txt
echo -n "Press <Enter> to continue "
read xxx_help
}
fi
}

if [ -f (hd1,gpt1)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd1,1)" {
insmod ntfs
set root=(hd1,gpt1)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

# Note: on 32-bit UEFI, in addition to disabling the 64-bit memtest we also
# disable looking for Windows past the first partition on the first drive.
# On at least one machine, the bootloader fails to work without this.
# See: https://forum.mxlinux.org/viewtopic.php?f=107&t=42863

if [ "${in_64_bit}" ]; then

if [ -f (hd1,gpt2)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd1,2)" {
insmod ntfs
set root=(hd1,gpt2)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

if [ -f (hd2,gpt1)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd2,1)" {
insmod ntfs
set root=(hd2,gpt1)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

if [ -f (hd2,gpt2)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd2,2)" {
insmod ntfs
set root=(hd1,gpt2)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

if [ -f (hd3,gpt1)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd3,1)" {
insmod ntfs
set root=(hd3,gpt1)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

if [ -f (hd3,gpt2)/EFI/MICROSOFT/BOOT/bootmgfw.efi ]; then
menuentry " Boot Windows from Hard Drive (hd3,2)" {
insmod ntfs
set root=(hd3,gpt2)
chainloader (${root})/EFI/MICROSOFT/BOOT/bootmgfw.efi
boot
}
fi

menuentry " Memory Test (64-bit UEFI)" {
#--esp set root=(hd0,2)
chainloader /boot/uefi-mt/mtest-64.efi
}

else

menuentry " Memory Test (32-bit UEFI)" {
#--esp set root=(hd0,2)
chainloader /boot/uefi-mt/mtest-32.efi
}
fi

